* Understand how objects and arrays work through the lens of Big O.
* Explain why adding elements to the beginning of an array is costly.
* Compare and constrast the runtime for arrays and objects, as well as built-in methods.

Notes:
When to use Objects: 
> when you don't need order.
> when you need fast access/insertion and removal.
Big O of objects: (insertion - O(1), removal - O(1), Searching - O(N), access - O(1)).

When to use arrays:
> when you need order.
> when you need fast access/insertion and removal (sort of...)
Big O of arrays: (Insertion - it depends, Remove - it depends, Searching - O(N), access - O(1)).
> push O(1), pop O(1), shift O(n), unshift O(n), concat O(n), slice O(n), splice O(n),
> sort O(n*log n), foreach/map/filter/reduce/etc. O(n).
